# -*- coding: utf-8 -*-
"""Graficoss.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qXs99GIbpZfkyYFOKb0N_njfsbDlfZAc

#Dados sobre emissão de gases do efeito estufa
Fenômeno agravado pelo descarte incorreto e queima de lixo eletronico

link para o df = https://basedosdados.org/dataset/9a22474f-a763-4431-8e3d-667908a1c7ab?table=104c6201-b0e7-47aa-b858-83252e2b149f
"""

emissao = ("/content/drive/MyDrive/NES/Pesquisas/br_seeg_emissoes_brasil.csv")
import pandas as pd
df3 = pd.read_csv(emissao)
df3.head()

import matplotlib.pyplot as plt

df_agrupado = df3.groupby('ano', as_index=False)['emissao'].sum()

plt.figure(figsize=(10, 6))
plt.plot(df_agrupado['ano'], df_agrupado['emissao'], marker='o', color='green', label='Emissão Total no ano')
plt.title('Total de gases agravantes do efeito estufa emitidos de 1970 a 2020', fontsize=16)
plt.xlabel('Ano', fontsize=14)
plt.ylabel('Quantidade emitida (Mt)', fontsize=14)
plt.grid(True)
plt.legend(fontsize=12)
plt.tight_layout()

plt.show()



emissoes_setor = df3.groupby(['ano', 'nivel_1'])['emissao'].sum().unstack(fill_value=0)

# Plotar o gráfico de barras empilhadas
emissoes_setor.plot(kind='bar', stacked=True, figsize=(12, 6), colormap='summer')#pode mudar a cor

# Personalizar o gráfico
plt.title('Emissão Total por Ano dividida em setores (nivel 1)', fontsize=16)
plt.xlabel('Ano', fontsize=14)
plt.ylabel('Emissão Total (Mt)', fontsize=14)
plt.xticks(rotation=45)
plt.legend(title='Setor (nivel 1)', fontsize=12)
plt.tight_layout()

# Exibir o gráfico
plt.show()

df3['gas'].unique()

"""#Dados do "Global E-waste Monitor 2024"

https://ewastemonitor.info/the-global-e-waste-monitor-2024/

https://globalewaste.org/statistics/country/brazil/2022/

"""

import matplotlib.pyplot as plt
lixo_gerado = 62
lixo_reciclado = 13.8
lixo_nao_reciclado = lixo_gerado - lixo_reciclado

labels = ['Lixo Reciclado e documentado', 'Lixo Não Documentado']
sizes = [lixo_reciclado, lixo_nao_reciclado]
plt.title("Porcentagem de lixo reciclado em 2022")
plt.pie(sizes, labels=labels, autopct='%1.1f%%', colors=['lightgreen', 'green'] )
plt.show()

#Retirado da table A2.4: Key e-waste statistics, by country or territory (2022)
gerado_br = 2243 #milhoes(kg)
reciclado_br = 79 #milhoes(kg)
nao_reciclado_br = gerado_br - reciclado_br
import matplotlib.pyplot as plt
labels = ['Lixo Reciclado e documentado', 'Lixo Não Documentado']
sizes = [reciclado_br, nao_reciclado_br]
plt.title("Porcentagem de lixo reciclado no Brasil")
plt.pie(sizes, labels=labels, autopct='%1.1f%%', colors=['lightgreen', 'green'] )
plt

#DADOS SOBRE LIXO GERADO NO BRASIL 2022
gerado_br_2022 = 2243 #milhoes(kt)
reciclado_br_2022 = 79 #milhoes(kt)
nao_reciclado_br_2022 = gerado_br - reciclado_br

gerado_br_2021 = 2380 #milhoes(kt)
reciclado_br_2021 = 77 #milhoes(kt)
nao_reciclado_br_2021 = gerado_br_2021 - reciclado_br_2021

gerado_br_2020 = 2312 #milhoes(kg)
reciclado_br_2020 = 75 #milhoes(kg)
nao_reciclado_br_2020 = gerado_br_2020 - reciclado_br_2020

gerado_br_2019 = 2235 #milhoes(kt)
reciclado_br_2019 = 72 #milhoes(kt)
nao_reciclado_br_2019 = gerado_br_2019 - reciclado_br_2019

gerado_br_2018 = 2141 #milhoes(kt)
reciclado_br_2018 = 69 #milhoes(kt)
nao_reciclado_br_2018 = gerado_br_2018 - reciclado_br_2018

import matplotlib.pyplot as plt

# Organizando os dados fornecidos
anos = [2018, 2019, 2020, 2021, 2022]

gerado = [2141, 2235, 2312, 2380, 2243]  # Resíduos gerados em milhões (kt)
reciclado = [69, 72, 75, 77, 79]  # Resíduos reciclados em milhões (kt)
nao_reciclado = [gerado[i] - reciclado[i] for i in range(len(gerado))]  # Resíduos não reciclados

# Gráfico de Linhas
plt.figure(figsize=(10, 6))

plt.plot(anos, gerado, marker='o', label='Lixo Gerado', color='lightblue')
plt.plot(anos, reciclado, marker='o', label='Lixo Reciclado', color='lightgreen')
plt.plot(anos, nao_reciclado, marker='o', label='Lixo Não Reciclado', color='green')

# Adicionando título e rótulos
plt.title('Tendência do Lixo Gerado, Reciclado e Não Reciclado no Brasil (2018-2022)')
plt.xlabel('Ano')
plt.ylabel('Milhões (kt)')

# Adicionando legenda
plt.legend()

# Exibindo o gráfico
plt.tight_layout()
plt.show()

"""#Dados sobre coleta de resíduos em Alagoas

link para o df = https://dados.al.gov.br/catalogo/am/dataset/dados-de-infraestrutura-perfil-municipal/resource/db568250-90c7-4b91-a9f8-fc98d2fcd834?inner_span=True
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
arq = ("/content/drive/MyDrive/NES/Pesquisas/Cópia de coleta-de-residuos.xls")
df = pd.read_excel(arq)


#Criando uma coluna que soma a qtd total de resíduos coletados desde 2013 a 2020
df["soma linha"]=df.drop(columns=["Código","Município"]).sum(axis=1)
df.head()

df_ordem = df.sort_values(by="soma linha", ascending=False)
df_ordem = df.sort_values(by="soma linha", ascending=False)
df_ordem.head(10)
#Observando os estados com maior com qtd de resíduos coletados ao longo do ano, podemos percber um necessidade de maispontos de coleta pra suprir a demanda e como são bem localizados podem servir como pontos de coleta centrais.
print(f"os q mais tiveram coloeta foram {df_ordem.iloc[0]['Município']},{df_ordem.iloc[1]['Município']}, {df_ordem.iloc[2]['Município']}, {df_ordem.iloc[3]['Município']}, {df_ordem.iloc[4]['Município']} ")

# Selecionar as 10 cidades que mais coletaram resíduos (opcional)
top_cidades = df_ordem.head(10)

# Criar o gráfico
plt.figure(figsize=(12, 6))
plt.bar(top_cidades['Município'], top_cidades['soma linha'], color='green')

# Ajustar os rótulos do eixo y para valores grandes
plt.ticklabel_format(style='plain', axis='y')  # Evita notação científica

# Títulos e rótulos
plt.title('Principais cidades na coleta de resíduos de 2014 a 2020', fontsize=16)
plt.xlabel('Cidade', fontsize=12)
plt.ylabel('Quantidade de Resíduos Coletados', fontsize=12)
plt.xticks(rotation=45, ha='right')

# Mostrar o gráfico
plt.tight_layout()
plt.show()

# Definindo os anos
anos = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]

dfs_por_ano_com_soma = {}

for ano in anos:
    colunas_ano = [col for col in df.columns if str(ano) in col]
    df_ano = df[["Município", "Código"] + colunas_ano]
    df_ano["soma linha"] = df_ano.drop(columns=["Município", "Código"]).sum(axis=1)

    dfs_por_ano_com_soma[ano] = df_ano

somas_anuais = []

for ano in range(2014, 2021):
    df_ano = dfs_por_ano_com_soma[ano]
    soma_total = df_ano["soma linha"].sum()
    somas_anuais.append(soma_total)

# Criar o gráfico de evolução
plt.figure(figsize=(10, 6))
plt.plot(range(2014, 2021), somas_anuais, marker="o", color="green")

plt.title("Total de Resíduos Coletados (2014-2020)", fontsize=16)
plt.xlabel("Ano", fontsize=14)
plt.ylabel("Quantidade Total de Resíduos Coletados", fontsize=14)
plt.grid(True)

plt.tight_layout()
plt.show()